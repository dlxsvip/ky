<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans     
        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
        http://www.springframework.org/schema/aop     
        http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
        http://www.springframework.org/schema/task  
		http://www.springframework.org/schema/task/spring-task-3.1.xsd  
        ">


    <!-- 启动自动扫描该包下所有的Bean(例如@Controller) -->
    <context:component-scan base-package="com.ky.logic.*"/>

    <!--任务注解-->
    <task:annotation-driven/>

    <!--注解驱动-->
    <mvc:annotation-driven/>

    <aop:aspectj-autoproxy proxy-target-class="true" expose-proxy="true"/>

    <bean id="propertyPlaceholderConfigurer"
          class="org.jasypt.spring31.properties.EncryptablePropertyPlaceholderConfigurer">
        <constructor-arg ref="configurationEncryptor"/>
        <property name="locations">
            <list>
                <value>/WEB-INF/classes/persistence-*.properties</value>
            </list>
        </property>
    </bean>

    <bean id="configurationEncryptor" class="org.jasypt.encryption.pbe.StandardPBEStringEncryptor">
        <property name="config" ref="environmentVariablesConfiguration"/>
    </bean>

    <bean id="environmentVariablesConfiguration" class="org.jasypt.encryption.pbe.config.EnvironmentStringPBEConfig">
        <property name="algorithm" value="PBEWithMD5AndDES"/>
        <property name="passwordEnvName" value="CAS_PBE_PASSWORD"/>
    </bean>

    <!-- 图片上传解析 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="-1"/>
    </bean>

    <!--视图解析-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/view/"/>
        <!--<property name="suffix" value=".html"/>-->
    </bean>

    <!--自定义异常处理-->
    <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
                <!--login 控制层-->
                <!--<prop key="com.ky.logic.common.exception.SessionTimeoutException">redirect:/control/login/loginHome</prop>-->
                <!--login 登录页面-->
                <prop key="com.ky.logic.common.exception.SessionTimeoutException">${view.login.page}</prop>
            </props>
        </property>
    </bean>

    <!-- 基于注释的事务，当注释中发现@Transactional时，使用id为“transactionManager”的事务管理器 -->
    <!-- 如果没有设置transaction-manager的值，则spring以缺省默认的事务管理器来处理事务，默认事务管理器为第一个加载的事务管理器 -->
    <import resource="spring-hibernate.xml"/>
    <tx:annotation-driven transaction-manager="transactionManager"/>
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="*" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>
    <aop:config>
        <aop:advisor advice-ref="txAdvice"
                     pointcut="execution(* org.snaker.engine.core.*.*(..)) or execution(* com.ky.logic.*.service.*.*(..)) "/>
    </aop:config>

    <mvc:annotation-driven>
        <mvc:message-converters>
            <!-- 避免执行AJAX时,返回JSON出现下载文件 -->
            <bean class="com.ky.logic.utils.JsonStringHttpMessageConverter"/>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 -->
    <mvc:interceptors>
        <!-- 日志拦截器 -->
        <mvc:interceptor>
            <!-- 不配置或/** 拦截所有 -->
            <mvc:mapping path="/**"/>
            <!--不需要拦截的路径-->
            <mvc:exclude-mapping path="/login/**"/>
            <mvc:exclude-mapping path="/view/**"/>
            <bean class="com.ky.logic.common.interceptor.MyInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>


</beans>